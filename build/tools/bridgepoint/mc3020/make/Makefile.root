#==========================================================================
# File:  Makefile.root
#
# Description:
# Top level makefile.
#
# Notice:
# (C) Copyright 1999-2013 Mentor Graphics Corporation
#     All rights reserved.
# Enhancements provided by TOYO Corporation.
# Enhancements provided by Sony Corporation.
#==========================================================================

.POSIX:
.SCCS_GET:
.SUFFIXES:

#==========================================================================
# Default action if we don't understand the target.
#==========================================================================
.DEFAULT :
	@echo "Target <$@> is not supported."
	@echo "Use 'make help' for a list of available targets."
	@false

#==========================================================================
# Displays the available targets in tabular format.
#==========================================================================
help :
	@echo "======================================================================="
	@echo " Primary Targets       | Translate  Compile     Link"
	@echo "======================================================================="
	@echo "   all                 |   YES        YES        YES"
	@echo "   all_no_gen          |    NO        YES        YES"
	@echo "   gen_all             |   YES         NO         NO"
	@echo "   comp_all            |    NO        YES         NO"
	@echo "======================================================================="
	@echo " Utility Targets       | Single Domain   All Domains     System Level"
	@echo "======================================================================="
	@echo "   Create/Update Nodes | dom_node        all_dom_nodes   sys_node"
	@echo "   Translate Code      | gen_dom         gen_all_dom     gen_sys"
	@echo "   Generate Database   | gen_db          gen_all_db      gen_sys_db"
	@echo "   Generate XML        | gen_xml         gen_all_xml"
	@echo "   Compile Code        | comp_dom        comp_all_dom    comp_sys"
	@echo "                       | just_comp_dom   just_comp_all   just_comp_sys"
	@echo "   Generate Document   | just_doc_dom    just_doc_all"
	@echo "   Generate CSV File   | gen_dom_csv     gen_all_csv"
	@echo "   Generate populate DT| gen_dom_pop     gen_all_pop"
	@echo "   Generate Trans Table| gen_dom_transtable gen_all_transtable"
	@echo "   Clean:              | clean_dom       clean_all_dom   clean_sys"
	@echo "                       | clean_dom_obj   clean_all_obj   clean_sys_obj"
	@echo "                       | clean_dom_src   clean_all_src   clean_sys_src"
	@echo "======================================================================="
	@echo " SDE Utility Targets   |                                               "
	@echo "======================================================================="
	@echo "   all                 | all_sde (gen_all -> sde_node -> comp_sde)"
	@echo "   Translate Code      | gen_all"
	@echo "   Create/Update Nodes | sde_node"
	@echo "   Compile Code        | comp_sde"
	@echo "   Clean:              | clean_sde"
	@echo "Notes:"
	@echo "   (1) comp_<xxx> targets (re)translate before compilation."
	@echo "       just_comp_<xxx> targets compile WITHOUT (re)translating."
	@echo "   (2) Miscellaneous targets: about, clobber, link_list, bridge_skel"
	@echo "   (3) SDE:  Single Directory Environment"

#==========================================================================
# Provide information regarding this model compiler installation.
#==========================================================================
about :
	@${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_info

#==========================================================================
# Just go and do it, the whole bloody thing...
# Subordinate translation targets; predicate compilation and link.
#==========================================================================
all :
	@set -e ; \
	${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.root comp_all_dom comp_sys link_sys

all_xml :
	@set -e ; \
	${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.root comp_all_dom comp_sys gen_all_xml link_sys

#==========================================================================
# Creates/updates a domain translation node.
#==========================================================================
dom_node :
	@if [ "${domain}" = "" ] ; then \
	  echo "\nERROR:  You must specify 'domain' when running target 'make $@'" ; \
          echo "" ; \
          echo "Usage:  make $@ domain=<repository_name> [ config_version=<config_version> ]" ; \
          echo "         [ branch_name=<branch_name> ]" ; \
          echo "Where: " ; \
          echo "   repository_name:  BridgePoint model repository domain name." ; \
          echo "   config_version :  Optional configuration version number (defaults to latest)." ; \
          echo "   branch_name    :  Optional branch name (defaults to MAIN)." ; \
          echo "" ; \
	  echo "Examples: " ; \
	  echo "   make $@ domain=microwave" ; \
	  echo "   make $@ domain=microwave config_version=2" ; \
	  echo "   make $@ domain=microwave branch_name=MAIN"; \
	  echo "   make $@ domain=microwave config_version=2 branch_name=MAIN\n"; \
	  exit 0 ; \
	else \
	  if [ "${config_version}" = "" ]; then \
	    config_version="latest"; \
	  else \
	    config_version="${config_version}" ; \
	  fi; \
	  if [ "${branch_name}" = "" ]; then \
	    branch_name="MAIN"; \
	  else \
	    branch_name="${branch_name}" ; \
	  fi ; \
          ${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_dom_init ${ROX_APP_ROOT_DIR} ${domain} $${config_version} $${branch_name} ;\
	fi

#==========================================================================
# Update all domain translation nodes.
#==========================================================================
all_dom_nodes :
	@for domain in `${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_get_doms ${ROX_APP_ROOT_DIR}` ; \
	  do \
	    config_version=`${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_get_dom_ver ${ROX_APP_ROOT_DIR} $${domain}` ; \
	    branch_name=`${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_get_dom_branch ${ROX_APP_ROOT_DIR} $${domain}` ; \
	    echo "all_dom_nodes: config_version=$${config_version}, branch_name=$${branch_name}" ; \
	    ${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.root dom_node domain=$${domain} config_version=$${config_version} branch_name=$${branch_name}; \
	  done

#==========================================================================
# Generates code for the domain specified by domain.
#==========================================================================
gen_dom :
	@if [ "${domain}" = "" ] ; then \
          echo "\nUsage:  make $@ domain=<repository_name>\n" ; \
	  exit 0 ; \
	else \
          config_version=`${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_get_dom_ver ${ROX_APP_ROOT_DIR} $${domain}` ; \
          branch_name=`${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_get_dom_branch ${ROX_APP_ROOT_DIR} $${domain}` ; \
          ${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.root dom_node domain=$${domain} config_version=$${config_version} branch_name=$${branch_name} ; \
	  'cd' ${ROX_APP_ROOT_DIR}/${domain} ; \
	  ${MAKE} dom_archetypes ; \
	fi

#==========================================================================
# Generates implementation code for all domains.
#==========================================================================
gen_all_dom:
	@for domain in `${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_get_doms ${ROX_APP_ROOT_DIR}` ; \
	  do \
	    ${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.root domain=$${domain} gen_dom || exit $$?; \
	  done

#==========================================================================
# Creates generation database for a specific domain.
#==========================================================================
gen_db:
	@if [ "${domain}" = "" ] ; then \
          echo "\nUsage: make $@ domain=<repository_name>\n" ; exit 1 ; \
	else \
	  'cd' ${ROX_APP_ROOT_DIR}/$${domain} ; \
	  ${MAKE} -f Makefile gen_db domain=${domain} ; \
	fi

#==========================================================================
# Creates the xml extraction for a specific domain for UML Debugger.
#==========================================================================
gen_xml:
	@if [ "${domain}" = "" ] ; then \
          echo "\nUsage:  make $@ domain=<repository_name>\n" ; exit 1 ; \
	else \
	  'cd' ${ROX_APP_ROOT_DIR}/$${domain} ; \
	  ${MAKE} -f Makefile gen_xml domain=${domain} ; \
	fi

#==========================================================================
# Creates the generation database for the system.
#==========================================================================
gen_sys_db:
	@'cd' ${ROX_APP_SYSTEM_DIR} ; \
	${MAKE} -f Makefile gen_sys_db

#==========================================================================
# Creates generation database for all domains.
#==========================================================================
gen_all_db :
	@for domain in `${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_get_doms ${ROX_APP_ROOT_DIR}` ; \
	  do \
	    'cd' ${ROX_APP_ROOT_DIR}/$${domain} ; \
	    ${MAKE} -f Makefile gen_db domain=$${domain} || exit $$?; \
	  done

#==========================================================================
# Creates xml extraction for all domains for UML Debugger.
#==========================================================================
gen_all_xml :
	@for domain in `${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_get_doms ${ROX_APP_ROOT_DIR}` ; \
	  do \
	    'cd' ${ROX_APP_ROOT_DIR}/$${domain} ; \
	    ${MAKE} -f Makefile gen_xml domain=$${domain} || exit $$?; \
	  done

#==========================================================================
# Generates documents for the domain specified by domain.
#==========================================================================
just_doc_dom :
	@if [ "${domain}" = "" ] ; then \
          echo "\nUsage: make $@ domain=<repository_name>\n" ; \
	  exit 1 ; \
	else \
          config_version=`${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_get_dom_ver ${ROX_APP_ROOT_DIR} $${domain}` ; \
          branch_name=`${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_get_dom_branch ${ROX_APP_ROOT_DIR} $${domain}` ; \
          ${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.root dom_node domain=$${domain} config_version=$${config_version} branch_name=$${branch_name} ; \
	  'cd' ${ROX_APP_ROOT_DIR}/${domain} ; \
	  ${MAKE} dom_doc_archetypes ; \
	fi

#==========================================================================
# Generates documents for all domains.
#==========================================================================
just_doc_all:
	@for domain in `${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_get_doms ${ROX_APP_ROOT_DIR}` ; \
	  do \
            config_version=`${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_get_dom_ver ${ROX_APP_ROOT_DIR} $${domain}` ; \
            branch_name=`${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_get_dom_branch ${ROX_APP_ROOT_DIR} $${domain}` ; \
	    'cd' ${ROX_APP_ROOT_DIR}/${domain} ; \
	    ${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.root domain=$${domain} config_version=$${config_version} branch_name=$${branch_name} just_doc_dom ; \
	  done

#==========================================================================
# Domain level cleaning targets.
#==========================================================================
clean_dom :
	@if [ "${domain}" = "" ] ; then \
          echo "\nUsage: make $@ domain=<repository_name>\n" ; exit 0 ; \
	else \
	  'cd' ${ROX_APP_ROOT_DIR}/${domain} ; ${MAKE} clean_dom ; \
	fi

clean_dom_src :
	@if [ "${domain}" = "" ] ; then \
          echo "\nUsage: make $@ domain=<repository_name>\n" ; exit 0 ; \
	else \
	  'cd' ${ROX_APP_ROOT_DIR}/${domain} ; ${MAKE} clean_dom_src ; \
	fi

clean_dom_obj :
	@if [ "${domain}" = "" ] ; then \
          echo "\nUsage: make $@ domain=<repository_name>\n" ; exit 0 ; \
	else \
	  'cd' ${ROX_APP_ROOT_DIR}/${domain} ; ${MAKE} clean_dom_obj ; \
	fi

#==========================================================================
# Interface for domain-level cleaning targets
#==========================================================================
clean_all_dom :
	@for domain in `${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_get_doms ${ROX_APP_ROOT_DIR}` ; \
	  do \
	    ${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.root domain=$${domain} clean_dom ; \
	  done

clean_all_src :
	@for domain in `${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_get_doms ${ROX_APP_ROOT_DIR}` ; \
	  do \
	    ${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.root domain=$${domain} clean_dom_src ; \
	  done

clean_all_obj :
	@for domain in `${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_get_doms ${ROX_APP_ROOT_DIR}` ; \
	  do \
	    ${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.root domain=$${domain} clean_dom_obj ; \
	  done

#==========================================================================
# domain compilation targets
#==========================================================================
comp_dom : gen_sys
	@if [ "${domain}" = "" ] ; then \
          echo "\nUsage: make $@ domain=<repository_name>\n" ; exit 0 ; \
	else \
	  'cd' ${ROX_APP_ROOT_DIR}/${domain}/gen/source && \
          ${MAKE} comp_dom_src && \
	  'cd' ${ROX_APP_ROOT_DIR}/${domain}/user/source && \
          ${MAKE} comp_user_src ; \
	fi

comp_all_dom : gen_all_dom gen_sys
	@for domain in `${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_get_doms ${ROX_APP_ROOT_DIR}` ; \
	  do \
	    ${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.root domain=$${domain} just_comp_dom || exit $$?; \
	  done

just_comp_dom :
	@set -e ; \
	if [ "${domain}" = "" ] ; then \
          echo "\nUsage: make $@ domain=<repository_name>\n" ; exit 0 ; \
	else \
	  'cd' ${ROX_APP_ROOT_DIR}/${domain}/gen/source && \
          ${MAKE} comp_dom_src && \
	  'cd' ${ROX_APP_ROOT_DIR}/${domain}/user/source && \
          ${MAKE} comp_user_src ; \
	fi

just_comp_all :
	@for domain in `${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_get_doms ${ROX_APP_ROOT_DIR}` ; \
	  do \
	    ${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.root domain=$${domain} just_comp_dom || exit $$?; \
	  done

#===========================================================================
# Domain Utility targets.
#===========================================================================
bridge_skel :
	@if [ "${domain}" = "" ] ; then \
          echo "\nUsage: make $@ domain=<repository_name> [ ee=<EE_key_letters> ]\n" ; \
	  exit 0 ; \
	else \
	  set -a ; \
          echo "Note:  model is NOT re-exported with make bridge_skel." ; \
	  GEN_SKEL_SPECIFIC_EE=${ee} ; \
	  'cd' ${ROX_APP_ROOT_DIR}/${domain} ; \
	  ${MAKE} bridge_skel ; \
	fi

#==========================================================================
# system level targets
#==========================================================================
sys_node :
	@${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_sys_init ${ROX_APP_ROOT_DIR}

gen_sys : sys_node
	@'cd' ${ROX_APP_SYSTEM_DIR} ; \
	${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_app_init ${ROX_APP_ROOT_DIR} ; \
	${MAKE} gen_sys

comp_sys : gen_sys
	@set -e ; \
	'cd' ${ROX_APP_SYSTEM_DIR}/gen/source && \
	${MAKE} comp_sys_src && \
	'cd' ${ROX_APP_SYSTEM_DIR}/user/source && \
	${MAKE} comp_user_src

just_comp_sys :
	@set -e ; \
	'cd' ${ROX_APP_SYSTEM_DIR}/gen/source && \
	${MAKE} comp_sys_src && \
	'cd' ${ROX_APP_SYSTEM_DIR}/user/source && \
	${MAKE} comp_user_src

comp_all :
	@set -e ; \
	${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.root comp_all_dom ; \
	${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.root comp_sys

#==========================================================================
# system level cleaning targets
#==========================================================================
clean_sys :
	@'cd' ${ROX_APP_SYSTEM_DIR} ; \
	${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.system clean_sys

clean_sys_src :
	@'cd' ${ROX_APP_SYSTEM_DIR} ; \
	${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.system clean_sys_src

clean_sys_obj :
	@'cd' ${ROX_APP_SYSTEM_DIR} ; \
	${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.system clean_sys_obj

#==========================================================================
# Scrog out everything of interest.
#==========================================================================
clobber :
	@${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.root clean_all_dom
	@${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.root clean_sys
	@'rm' -rf ${ROX_APP_ROOT_DIR}/reports/*

#==========================================================================
# Compile and link all, with no source code generation.
#==========================================================================
all_no_gen :
	@set -e
	@${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.root just_comp_all just_comp_sys link_sys

#==========================================================================
# Translate without compilation and link.
#==========================================================================
gen_all :
	@${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.root gen_all_dom gen_sys

#==========================================================================
# System level linkage targets.
#==========================================================================

#==========================================================================
# Create full list of object files to link.
#==========================================================================
link_list :
	@set -e ; \
	target_file=${ROX_APP_ROOT_DIR}/bin/objects.lst ; \
        ${MAKE} -f ${ROX_APP_SYSTEM_DIR}/gen/source/Makefile object_list > $${target_file}.new ; \
        ${MAKE} -f ${ROX_APP_SYSTEM_DIR}/user/source/Makefile object_list >> $${target_file}.new ; \
	for domain in `${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_get_doms ${ROX_APP_ROOT_DIR}` ; \
	  do \
            ${MAKE} -f ${ROX_APP_ROOT_DIR}/$${domain}/gen/source/Makefile object_list >> $${target_file}.new ; \
            ${MAKE} -f ${ROX_APP_ROOT_DIR}/$${domain}/user/source/Makefile object_list >> $${target_file}.new ; \
          done ;\
	grep '\.o' $${target_file}.new > $${target_file}

#==========================================================================
# Link system executable
#==========================================================================
link_sys : link_list
	@set -e ; \
	'cd' ${ROX_APP_ROOT_DIR}/bin ; \
	${ROX_APP_ROOT_DIR}/bin/link_sys ; \
	echo "Your executable has been placed in ${ROX_APP_ROOT_DIR}/bin" ; \
	echo "SYSTEM BUILD COMPLETE - enjoy..."


#==========================================================================
# SDE utilites
#==========================================================================
all_sde :
	@${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.root gen_all
	${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_sde_init ${ROX_APP_ROOT_DIR}
	'cd' ${ROX_APP_ROOT_DIR}/sde
	${MAKE} -f Makefile all

sde_node :
	@${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_sde_init ${ROX_APP_ROOT_DIR}

comp_sde :
	@'cd' ${ROX_APP_ROOT_DIR}/sde
	${MAKE} -f Makefile all

clean_sde :
	@'cd' ${ROX_APP_ROOT_DIR}/sde
	${MAKE} -f Makefile clean

#==========================================================================
# Generates CSV file for the domain specified by domain.
#==========================================================================
gen_dom_csv :
	@if [ "${domain}" = "" ] ; then \
          echo "\nUsage: make $@ domain=<repository_name>\n" ; \
	  exit 0 ; \
	else \
          config_version=`${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_get_dom_ver ${ROX_APP_ROOT_DIR} $${domain}` ; \
          branch_name=`${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_get_dom_branch ${ROX_APP_ROOT_DIR} $${domain}` ; \
          ${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.root dom_node domain=$${domain} config_version=$${config_version} branch_name=$${branch_name} ; \
	  'cd' ${ROX_APP_ROOT_DIR}/${domain} ; \
	   echo "Generating CSV template file for ${domain} domain...\n" ; \
	  ${MAKE} gen_dom_csv ; \
	fi

#==========================================================================
# Generates CSV files for all domains.
#==========================================================================
gen_all_csv :
	@for domain in `${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_get_doms ${ROX_APP_ROOT_DIR}` ; \
	  do \
	    ${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.root domain=$${domain} gen_dom_csv ; \
	  done

#==========================================================================
# Generates CSV file for the domain specified by domain.
#==========================================================================
gen_dom_pop :
	@if [ "${domain}" = "" ] ; then \
          echo "\nUsage: make $@ domain=<repository_name>\n" ; \
	  exit 0 ; \
	else \
	  'cd' ${ROX_APP_ROOT_DIR}/${domain} ; \
	   echo "Translating CSV files to populate.arc for ${domain} domain...\n" ; \
	  ${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.root domain=$${domain} gen_dom ; \
	  if [ "${ROX_MC_XLATE_STRINGS}" = "TRUE" ] ; then \
	    'jperl' ${ROX_MC_BIN_DIR}/xtumlmc_csv2pop persist_dir gen/source color/populate.arc ; \
	  else \
	    'perl' ${ROX_MC_BIN_DIR}/xtumlmc_csv2pop persist_dir gen/source color/populate.arc ; \
	  fi ; \
	fi

#==========================================================================
# Generates CSV files for all domains.
#==========================================================================
gen_all_pop :
	@for domain in `${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_get_doms ${ROX_APP_ROOT_DIR}` ; \
	  do \
	    ${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.root domain=$${domain} gen_dom_pop ; \
	  done

#==========================================================================
# Generates Trans Table CSV files for all domains.
#==========================================================================
gen_dom_transtable :
	@if [ "${domain}" = "" ] ; then \
		  echo "\nUsage: make $@ domain=<repository_name>\n" ; \
	  exit 0 ; \
	else \
	  'cd' ${ROX_APP_ROOT_DIR}/${domain}/translate ; \
	  echo "Create Trans Table for ${domain} domain...\n" ; \
	  if [ "${ROX_MC_XLATE_STRINGS}" = "TRUE" ] ; then \
		${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_gen_transtable ../schema/gen/${domain}.gen; \
	  fi ; \
	fi

#==========================================================================
# Generates Trans Table CSV file for the domain specified by domain.
#==========================================================================
gen_all_transtable :
	@for domain in `${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_get_doms ${ROX_APP_ROOT_DIR}` ; \
	  do \
		${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.root domain=$${domain} gen_dom_transtable ; \
	  done

###########################################################################
#==========================================================================
# Generates Colored DB for the system
#==========================================================================
gen_sys_data : sys_node
	@'cd' ${ROX_APP_SYSTEM_DIR}
	set -a
	SYSTEM_SQL="schema/sql/system.sql"
	set +a
	cp ./schema/sql/sys_root.sql ./$${SYSTEM_SQL}
	${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.system sys_colors
	"${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_gen_file" ./schema/gen/system.gen ${BPP_ARC_DIR}/palette_common.arc
	'cd' ${ROX_APP_ROOT_DIR}
	${MAKE} clean_sys


#==========================================================================
# Generates Colored DB for the domain specified by domain.
#==========================================================================
gen_palette_data :
	@if [ "${domain}" = "" ] ; then \
	  echo "\nUsage: make $@ domain=<repository_name>\n" ; \
	  exit 1 ; \
	else \
	  config_version=`${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_get_dom_ver ${ROX_APP_ROOT_DIR} $${domain}` ; \
	  branch_name=`${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_get_dom_branch ${ROX_APP_ROOT_DIR} $${domain}` ; \
	  ${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.root dom_node domain=$${domain} config_version=$${config_version} branch_name=$${branch_name} ; \
	  'cd' ${ROX_APP_ROOT_DIR}/${domain};\
	  ${MAKE} dom_colors ;\
	  "${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_gen_file" "./schema/gen/${domain}.gen" "${BPP_ARC_DIR}/palette_domain.arc" ; \
	  "${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_gen_file" "./schema/gen/${domain}.gen" "${BPP_ARC_DIR}/palette_tree.arc" ; \
	fi


#==========================================================================
# Generates Colored DB
#==========================================================================
gen_all_palette_data :
	@for domain in `${ROX_MC_BIN_DIR}/xtumlmc_build xtumlmc_get_doms ${ROX_APP_ROOT_DIR}` ; \
	  do \
		${MAKE} -f ${ROX_MC_MAKE_DIR}/Makefile.root domain=$${domain} gen_palette_data ; \
	  done

